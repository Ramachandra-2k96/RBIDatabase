# Generated by Django 4.2.9 on 2024-03-04 09:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_number', models.CharField(editable=False, max_length=16, primary_key=True, serialize=False, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(editable=False, max_length=21, unique=True)),
                ('main_branch_address', models.TextField()),
                ('owner_name', models.CharField(max_length=100)),
                ('bank_type', models.CharField(choices=[('gov', 'Government'), ('private', 'Private'), ('cooperative', 'Cooperative')], max_length=20)),
                ('customer_service_number', models.CharField(max_length=15)),
                ('bank_email', models.EmailField(max_length=254)),
                ('name_link', models.CharField(editable=False, max_length=21, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=100)),
                ('employee_number', models.CharField(max_length=20, unique=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('position', models.CharField(choices=[('manager', 'Manager'), ('assistant_manager', 'Assistant Manager'), ('teller', 'Teller'), ('customer_service_rep', 'Customer Service Representative'), ('loan_officer', 'Loan Officer'), ('financial_analyst', 'Financial Analyst'), ('accountant', 'Accountant'), ('auditor', 'Auditor'), ('security_officer', 'Security Officer'), ('IT_specialist', 'IT Specialist'), ('marketing_specialist', 'Marketing Specialist'), ('human_resources', 'Human Resources'), ('operations_specialist', 'Operations Specialist'), ('cleaner', 'Cleaner')], max_length=60)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(max_length=15, unique=True)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateField(null=True)),
                ('age', models.IntegerField(editable=False, null=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('occupation', models.CharField(max_length=100, null=True)),
                ('father_name', models.CharField(max_length=100, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('Credit', 'Credit'), ('Debit', 'Debit')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='Processing', max_length=15, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='newbank.account')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('repayment_schedule', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='newbank.account')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, unique=True)),
                ('expiration_date', models.DateField()),
                ('cvv', models.CharField(max_length=3)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='card', to='newbank.account')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('ifsc_code', models.CharField(editable=False, max_length=23, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=15)),
                ('pin_code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches_at_bank', to='newbank.bank')),
                ('bank_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='newbank.bank')),
                ('managers_ssn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='newbank.bankemployee')),
            ],
            options={
                'unique_together': {('bank_code', 'ifsc_code')},
            },
        ),
        migrations.AddField(
            model_name='bankemployee',
            name='ITFSCcode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='it_employees', to='newbank.branch'),
        ),
        migrations.AddField(
            model_name='bankemployee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='newbank.branch'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ATMTransaction',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('newbank.transaction',),
        ),
        migrations.CreateModel(
            name='OnlineTransaction',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('newbank.transaction',),
        ),
    ]
